{"ast":null,"code":"var _jsxFileName = \"D:\\\\Aquera Internship\\\\Frontend\\\\my-app\\\\src\\\\Pages\\\\IndividualPlanet\\\\IndividualPlanet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './IndividualPlanet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualPlanet = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [planet, setPlanet] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  if (!planet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"No planet found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row planet-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Rotation Period : \", planet.rotation_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Orbital Period : \", planet.orbital_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Diameter : \", planet.diameter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Climate : \", planet.climate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Gravity : \", planet.gravity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Terrain : \", planet.terrain]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Surface Water : \", planet.surface_water]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Population : \", planet.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Related People:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), planet.residents.map((resident, index) => {\n            const residentId = resident.split(\"/\").filter(Boolean).pop(); // Extract ID from resident URL\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/person/${residentId}`,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: residentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"films-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Related Films:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), planet.films.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/film/${index + 1}`,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\" \", index + 1, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(IndividualPlanet, \"knO9Ps7I9mzV2qKX056X7Q+SVLU=\", false, function () {\n  return [useParams];\n});\n_c = IndividualPlanet;\nexport default IndividualPlanet;\nvar _c;\n$RefreshReg$(_c, \"IndividualPlanet\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","jsxDEV","_jsxDEV","IndividualPlanet","_s","id","planet","setPlanet","loading","setLoading","error","setError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","map","resident","index","residentId","split","filter","Boolean","pop","to","films","film","_c","$RefreshReg$"],"sources":["D:/Aquera Internship/Frontend/my-app/src/Pages/IndividualPlanet/IndividualPlanet.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport './IndividualPlanet.css'\r\n\r\nconst IndividualPlanet = () => {\r\n    const { id } = useParams();\r\n    const [planet, setPlanet] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    \r\n\r\n    if (loading) {\r\n        return <div className='container'>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className='container'>Error: {error}</div>;\r\n    }\r\n\r\n    if (!planet) {\r\n        return <div className='container'>No planet found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row planet-details\">\r\n                    <h2>{planet.name}</h2>\r\n                    <h3>Rotation Period : {planet.rotation_period}</h3>\r\n                    <h3>Orbital Period : {planet.orbital_period}</h3>\r\n                    <h3>Diameter : {planet.diameter}</h3>\r\n                    <h3>Climate : {planet.climate}</h3>\r\n                    <h3>Gravity : {planet.gravity}</h3>\r\n                    <h3>Terrain : {planet.terrain}</h3>\r\n                    <h3>Surface Water : {planet.surface_water}</h3>\r\n                    <h3>Population : {planet.population}</h3>\r\n                    <div className='person-div'>\r\n        <h3>Related People:</h3>\r\n        {planet.residents.map((resident, index) => {\r\n          const residentId = resident.split(\"/\").filter(Boolean).pop(); // Extract ID from resident URL\r\n          return (\r\n            <div key={index}>\r\n              <Link to={`/person/${residentId}`}>\r\n                <h4>{residentId}</h4>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n                <div className='films-div'>\r\n                    <h3>Related Films:</h3>\r\n                    {planet.films.map((film, index) => (\r\n                        <div key={index}>\r\n                            <Link to={`/film/${index + 1}`}> <h4> {index+1} </h4></Link> {/* Link to individual film page */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndividualPlanet;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}