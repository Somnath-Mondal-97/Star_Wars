{"ast":null,"code":"var _jsxFileName = \"D:\\\\Aquera Internship\\\\Frontend\\\\my-app\\\\src\\\\Pages\\\\Planet\\\\Planets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Planets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [nextPage, setNextPage] = useState('');\n  const [prevPage, setPrevPage] = useState('');\n  useEffect(() => {\n    const fetchPlanetsData = async () => {\n      try {\n        const response = await fetch('https://swapi.dev/api/planets/?format=json');\n        if (!response.ok) {\n          throw new Error('Failed to fetch planets data');\n        }\n        const data = await response.json();\n        setPlanets(data.results);\n        setNextPage(data.next);\n        setPrevPage(data.previous);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchPlanetsData();\n  }, []);\n  const handlePrevPage = async () => {\n    if (prevPage) {\n      try {\n        const response = await fetch(prevPage);\n        if (!response.ok) {\n          throw new Error('Failed to fetch previous page data');\n        }\n        const data = await response.json();\n        setPlanets(data.results);\n        setNextPage(data.next);\n        setPrevPage(data.previous);\n      } catch (error) {\n        console.error('Error fetching previous page data:', error);\n      }\n    } else {\n      alert('No Previous Page');\n    }\n  };\n  const handleNextPage = async () => {\n    if (nextPage) {\n      try {\n        const response = await fetch(nextPage);\n        if (!response.ok) {\n          throw new Error('Failed to fetch next page data');\n        }\n        const data = await response.json();\n        setPlanets(data.results);\n        setNextPage(data.next);\n        setPrevPage(data.previous);\n      } catch (error) {\n        console.error('Error fetching next page data:', error);\n      }\n    } else {\n      alert('No Next Page');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: planets.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 planet-button-div mt-5 mb-5\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/planet/${planet.url.split('/').slice(-2, -1)[0]}`,\n            className: \"btn-link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"planet-button\",\n              children: planet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, planet.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 m-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group btn-group-lg button-group\",\n            role: \"group\",\n            \"aria-label\": \"Large button group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-info\",\n              onClick: handlePrevPage,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-info\",\n              onClick: handleNextPage,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"HMoBVjP2cvGfknIP/l9mmlx1xWM=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Planets","_s","planets","setPlanets","nextPage","setNextPage","prevPage","setPrevPage","fetchPlanetsData","response","fetch","ok","Error","data","json","results","next","previous","error","console","handlePrevPage","alert","handleNextPage","children","className","map","planet","to","url","split","slice","name","fileName","_jsxFileName","lineNumber","columnNumber","role","type","onClick","_c","$RefreshReg$"],"sources":["D:/Aquera Internship/Frontend/my-app/src/Pages/Planet/Planets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Planets.css'\r\n\r\nconst Planets = () => {\r\n    const [planets,setPlanets] = useState([])\r\n    const[nextPage,setNextPage] = useState('')\r\n    const[prevPage,setPrevPage] = useState('')\r\n    \r\n    useEffect(() => {\r\n        const fetchPlanetsData = async () => {\r\n            try {\r\n                const response = await fetch('https://swapi.dev/api/planets/?format=json');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch planets data');\r\n                }\r\n                const data = await response.json();\r\n                setPlanets(data.results);\r\n                setNextPage(data.next);\r\n                setPrevPage(data.previous);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n    \r\n        fetchPlanetsData();\r\n    }, []);\r\n    \r\n    const handlePrevPage = async () => {\r\n        if (prevPage) {\r\n            try {\r\n                const response = await fetch(prevPage);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch previous page data');\r\n                }\r\n                const data = await response.json();\r\n                setPlanets(data.results);\r\n                setNextPage(data.next);\r\n                setPrevPage(data.previous);\r\n            } catch (error) {\r\n                console.error('Error fetching previous page data:', error);\r\n            }\r\n        } else {\r\n            alert('No Previous Page');\r\n        }\r\n    };\r\n    \r\n    const handleNextPage = async () => {\r\n        if (nextPage) {\r\n            try {\r\n                const response = await fetch(nextPage);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch next page data');\r\n                }\r\n                const data = await response.json();\r\n                setPlanets(data.results);\r\n                setNextPage(data.next);\r\n                setPrevPage(data.previous);\r\n            } catch (error) {\r\n                console.error('Error fetching next page data:', error);\r\n            }\r\n        } else {\r\n            alert('No Next Page');\r\n        }\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            {\r\n                planets.map(planet => (\r\n                    <div key={planet.name} className=\"col-lg-4 planet-button-div mt-5 mb-5\">\r\n                        <Link to={`/planet/${planet.url.split('/').slice(-2, -1)[0]}`} className='btn-link'>\r\n                            <button className=\"planet-button\">{planet.name}</button>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-6 m-auto\">\r\n                <div className=\"btn-group btn-group-lg button-group\" role=\"group\" aria-label=\"Large button group\">\r\n                    <button type=\"button\" className=\"btn btn-outline-info\" onClick={handlePrevPage}>Prev</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-info\" onClick={handleNextPage}>Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Planets\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}